
                    "ZQuake" QuakeWorld Client (zqwcl) v0.098
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


1. О проекте ZQuake
~~~~~~~~~~~~~~~~~~~
Люди играют в Quake давно и знают, чего им не хватает в игре. А вернее, чего
не хватает в клиенте. Стали появляться QW-proxy, типа Qizmo, cheapo, NFProxy.
Но  они влияют только лишь на информацию передаваемую между сервером и
клиентом, и потом, это все-таки прокси. Так вот, zquake задумывался, как
что-то, что будет вбирать в себя все самое полезное из прокси и будет иметь
свои дополнительные возможности. Такие как, например, возможность биндить
клавиши capslock, numlock и клавиши цифровой клавиатуры. И так далее.
Cписок дополнительных  возможностей постоянно расширяется, с учетом пожеланий
Quake-общественности.

1.1. Что есть в этом readme
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Проект ZQuake - это:
zqwcl.exe ---  QW-клиент (модификация qwcl)
zqwcl-gl.exe --- QW-клиент для OpenGL (модификация glqwcl)
zqwsv.exe --- QW-сервер (модификация qwsv)
zquake.exe --- это уже кое-что новое, клиент и сервер в одном .exe, пока что
	находится в разработке, так что возможны некоторые глюки.
	zquake-gl пока не готов, однако работы ведутся.

Данный readme охватывает zqwcl, zqwcl-gl и zquake.
Документация к zqwsv находится в архиве с zqwsv :)

1.2. Различия между командами zquake и zqwsv
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Так как в QuakeWorld изначально не было такой вещи, как клиент и сервер в
одном exe, то при их слиянии возникли некоторые проблемы с переменными и
командами, имеющими одинаковые имена.

- Переменные cl_rollangle и cl_rollspeed переименованы в sv_rollangle и
sv_rollspeed соответственно, так как в клиенте уже есть такие переменные,
но имеющие другое назначение.

- Команда status переименована в serverstatus, так как алиас status уже
используется в очень распространенном моде Kombat Teams для вывода информации
о настройках игры.

- Команда serverinfo ведет себя по-разному в зависимости от того, к какому
серверу вы подключены --- локальному или внешнему.  В отключенном состоянии
(сразу после запуска zquake) и на локальном сервере (запущенному командой map)
она работает как serverinfo в zqwsv, и вы можете поменять настройки serverinfo
сервера.  Если же вы подключены к внешнему серверу, то она работает как
serverinfo в zqwcl (то есть в режиме "только чтение").


2. Список новых команд
~~~~~~~~~~~~~~~~~~~~~~
* cmdlist - вывести список всех команд
* cvarlist - вывести список переменных.
	При этом напротив каждой переменной выводятся ее "флаги":
	* - архивная переменная (например, m_pitch, name)
	u - userinfo (name, bottomcolor)
	s - serverinfo (deathmatch, hostname)
* toggle - инвертировать значение переменной (1 -> 0 и 0 -> 1)
* unalias - уничтожить существующий "alias"
* loadloc - загрузить loc-файл (он должен лежать в id1/locs, qw/locs, или
	<gamedir>/locs (то есть, например, fortress/locs)).
	Расширение ".loc" можно не указывать. Например, "loadloc dm6";
	если же сам файл не имеет расширения, в конце следует
	поставить точку: "loadloc dm6."
* set - установить/создать переменную.
* teamcolor - принудительная установка цвета врагов (не работает в GL)
* enemycolor - принудительная установка цвета тиммэйтеров (не работает в GL)
* enemyskin - принудительная установка скина врагов.
* teamskin - то же, что и enemyskin, но для тиммейтеров.
* easyrecord - чтобы писать демки не заботясь об имени (описывается ниже).
* msg_trigger - настройка системы отлова сообщений, описывается ниже.


3. Список новых переменных
~~~~~~~~~~~~~~~~~~~~~~~~~~
* crosshair 3 - маленький прицел цвета crosshaircolor

* cl_bonusflash [1,0] - включить/выключить вспышку "bonus flash"
	при подборе вещей, оружия...

* cl_c2spps - фильтрация пакетов а-ля Qizmo.  Выкидывает часть пакетов,
	передаваемых от сервера к клиенту, в результате чего уменьшается
	сетевой трафик, что позволяет достичь плавного даже при игре по
	модему.  Рекомендуемые настройки -- cl_maxfps 72 и cl_c2spps 30.

* cl_chatmode [1,2] - режим обработки команд консоли.
	0 - как в NetQuake, то есть текст в консоли всегда рассматривается
	как команда, и чтобы послать сообщение, надо нажимать кнопку T или
	набирать в консоли "say".
	1 - новый режим а-ля Q3A, все, что вы набираете в консоли, будет
	посылаться в чат. А чтобы все-таки выполнить комнаду, ставьте перед
	ней слэш (/).
	2 - по умолчанию, как в QW 2.30 - если первое слово в строке распознано
	как команда, она будет выполнена, иначе сообщение пойдет в чат.

* cl_clock - [0...2] рисует часики на экране (я-ля nfproxy)
	0 - выключены (по умолчанию)
	1 - показывают время, проведенное на сервере
	2 - показывает время дня
* cl_clock_x - x-координата часиков
* cl_clock_y - y-координата часиков (если < 0, то отсчет идет от нижней
	части экрана)

* cl_loadlocs - если поставить в 1, loc-файлы будут автоматически подгружаться
	при смене карты. Loc'и должны лежать в /id1/locs/ или /qw/locs/.
	.loc файлы это схема проименованных точек на карте. Т.е. вы всегда
	сможете сказать своей команде, где вы находитесь. В качестве ваших
	координат, будет выдаваться ближайшая к вам точка. Подробнее об
	этом можно прочитать в любой proxy, например, Qizmo или NFProxy.
	К сожалению, не предусмотрена возможность создавать и
	редактировать loc points. Для этого удобнее пользоваться прокси.

* cl_deadbodyfilter - если 1 (по умолчанию 0), то не будут прорисовываться
	трупы игроков. Это немного добавляет FPS и, главное, не отвлекает ваше
	внимание на трупы. (ВНИМАНИЕ!!! В TF, если выключить трупы, то
	также не будет видно и притворившегося шпиона, поэтому пользуйтесь
	этой переменной правильно).

* cl_explosion [0-3,6,7,8] - Замена стандартных взрывов на более "легкие"
	(на манер NFProxy). Значительно может увеличить FPS в мясе, а главное,
	в мясе станет легче сохранять спокойствие и ориентацию в пространстве :)
	Возможные варианты:
	0 - normal (по умолчанию); 1 - no particles;
	2 - no dynamic lighting; 3 - no particles & no dynamic lighting;
	6 - teleport; 7 - blood; 8 - bigblood

* cl_gibfilter - отключить "гибы". Увеличивает fps в мясе у не отвлекает
	внимание.

* cl_muzzleflash [0,1,2] - "Muzzleflash" (вспышки от оружия)
	0 - все выключены; 1 - все включены (по умолчанию);
	2 - выключить только свою вспышку.

* cl_r2g - работает так же, как .r2g в qizmo и nfproxy. Превращает все ракеты
	в гранаты :)

* cl_speedjumpfix - если 1 (по умолчанию), то включается предсказание прыжка
	на клиенте. Результат - распрыг замечательно делается даже при
	пинге 200.

* cl_triggers - если 1 (0 по умолчанию), то становится возможным при некоторых
	событиях запускать alias'ы.

	alias'ы:
	~~~~~~~~
	f_respawn - выполянется при рождении игрока.
	f_death - выполянется при смерти игрока.
	f_mapend - выполянется при смене карты.

	Примеры использования:
	alias f_respawn "say_team respawned at %l;easyrecord mydemo_start"
	alias f_death "say_team died at %l;stop"
	alias f_mapend "exec fornewmap.cfg;say Yahoo! I'm rox!"

* default_fov - замена стандартному fov, очень удобная штука в TF.
		Теперь не придется каждый раз жать кнопку, чтобы выставить
		свой любимый fov, достаточно прописать, скажем,
		default_fov 120 и все. При респавнах fov уже будет
		выставляться в 120.

* demotimescale (0.1 - 10) - меняет скорость проигрывания демок.

* impulse imp1 [imp2 [imp3...]] - выбор наилучшего оружия
	Пример:
	impulse 5 4 - выбор nailgun'а либо supernailgun'а, смотря что имеется.

* r_drawflame - если поставить в 0, модели факелов не будут рисоваться.
	На таких картах, как dm6, дает заметную прибавку fps.
	Включить/выключить ее "на ходу" нельзя, надо сделать reconnect.

* r_rocketlight [1,0] - включить/выключить динамическое освещение от ракет.

* r_rockettrail [0-7] - модификация следа от ракеты (на манер прокси)
	0 - след выключен
	1 - стандарт (по умолчанию)
	2 - след от гранаты

* show_speed - показывать в правом верхнем углу вашу текущую скорость,
	(точнее, ее горизонтальную составляющую). Очень удобно для тренировки
	стрейф-джампов и распрыгов.

* v_contentblend [0,1] - если 0, то вода становится чистой

* v_damagecshift [0..1] - коэффициент вспышки, когда в вас попадают
	К примеру, если выставить в 0, то вспышки при попадании не будет.
	Отвлекать по идее должно меньше.

* v_pentcshift [0..1] - коэффициент вспышки, когда вы взяли пентаграмму
* v_quadcshift [0..1] - коэффициент вспышки, когда вы взяли квадру
* v_ringcshift [0..1] - коэффициент вспышки, когда вы взяли кольцо
* v_suitcshift [0..1] - коэффициент вспышки, когда вы взяли костюм

!!!Примечание для TF!!!
Команды v_cshift, v_idlescale, v_i* в TF отключены, чтобы избежать читинга
со "старыми" флеш и конкашен гранатами.

4. Использование "макросов"
~~~~~~~~~~~~~~~~~~~~~~~~~~~
* _cmd_macros - если включить, через знак доллара можно вывести на экран
	кое-какую информацию, например:
	say_team "at $location  $armor/$health  $powerups"

* cl_nofake 1 запрещает вывод "fake" сообщений (0 по умолчанию).

* cl_parsesay - если поставить в 1 (по умолчанию 0), становится возможным
	использование тимплейных сообщений а-ля NFProxy:
	say_team "at %l %a/%h %P"
	Пока что работает совсем небольшое количество %-команд, но будем
	работать...

* При включенной опции cl_parsesay становится возможным выдавать Ocrana LED's
	("$R$G$B$Y" - лампы) вручную, прямо из консоли.
	А также выводить "fake" сообщения через "$\" без вашего имени.
	(т.е. сообщения, которые видны без вашего имени в начале фразы)

	$R - Красная лампа
	$G - Зеленая лампа
	$B - Синяя лампа
	$Y - Желтая лампа
	Чтобы их увидеть, требуется установить Ocranа пак с лампами.

	Например, на команду:
	say "$\$R$YYou just suck!$Y$R"
	Ваш противник увидит:
	@@You just suck!@@

	примечание:
	$\ - До этой комбинации все предыдущие слова игнорируются.

* Список "макросов"
~~~~~~~~~~~~~~~~~~~~
Колонка "Макрос" - полное имя макроса
(чтобы включить обработку макросов в команде say,
наберите _cmd_macros 1).
Колонка "NF" - альтернативное написание макросов
(включается переменной cl_parsesay).

Макрос          NF      Описание
~~~~~~~~~~~~~~  ~~      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$armor		%a	количество брони
$armortype	%A	тип брони (ga, ya, ra)
$health		%h	здоровье

$shells			количество патронов
$nails			количество гвоздей
$rockets	%r	количество ракет
$cells		%c	количество батареек

$weapon		%w	текущее оружие
$ammo		%W	количество патронов к текущему оружию

$powerups	%P	имеющиеся "powerups" (quad/pent/ring)

$location	%l	текущее положение на карте
			(должен быть загружен loc-файл)

		%L	текущее положение, или место смерти, если со времени
			смерти прошло не более 5 секунд

		%d	место последней смерти
----------------------------------------------------------------------


5. Остальные фичи
~~~~~~~~~~~~~~~~~

5.1. $-expansion (cvar expansion)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Это возможность обращаться к значению переменной, как в Ку2 - через знак
доллара.
Примеры:
echo $sensitivity - выдаст в консоль текущее значение чувствительности мыши.
alias +zoom "set _fov $fov; fov 45"
alias -zoom "set fov $_fov"
	Т.е. при таком раскладе всегда можно восстановить предыдущее
	значение переменной. Удобно будет писать регулировку громкости,
	чувствительности мыши, смену rate и т.д.

* inc [value] - Команда inc [value].
	Если не указан второй параметр, увеличивает переменную на единицу,
	если указан, прибавляет к переменной второй параметр.
	То есть, например, inc vol -0.1 уменьшает громкость на 0.1.

5.2. Система отлова сообщений
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* msg_trigger <alias> <string>
	С помощью этой команды можно автоматически выполнять свой
	alias, если в консоли появилось определенное сообщение. В alias'е
	разрешено ограниченное число команд:
	alias, echo, play, playvol, say, say_team, set, msg_trigger, inc.
        Размер параметра string ограничен 64 байтами.

	Для примера:
	alias no_ammo "play noammo.wav"
	msg_trigger no_ammo "Not enough ammo"
	При появлении сообщения "Not enough ammo" запустится alias no_ammo,
	и в результате будет проигран звук noammo.wav (предполагается, что
	у вас есть файл noammo.wav в каталоге id1/sounds; его можно взять,
	например, из QII.

	для TF:
	alias play_count "play count.wav"
	msg_trigger play_count "renade primed"
	И если, скажем, в консоли появятся сообщения типа -
	"Grenade primed, 3 seconds..." или
	"Napalm grenade primed, 3 seconds...", то сработает alias play_count.

	Внимание: система отлова сообщений пока находится в разработке, так что
	не исключено, что со временем формат команды будет изменен.

5.3. Клавиши
~~~~~~~~~~~~
* cl_keypad - [0,1] если поставить в 1 (по умолчанию), то появится возможность
	биндить такие клавиши, как capslock, numlock, и все клавиши
	цифровой клавиатуры. Вот их полный список:
	CAPSLOCK
	KP_NUMLOCK	(или NUMLOCK)
	KP_SLASH
	KP_STAR
	KP_MINUS
	KP_HOME
	KP_UPARROW
	KP_PGUP
	KP_PLUS
	KP_LEFTARROW
	KP_5
	KP_RIGHTARROW
	KP_END
	KP_DOWNARROW
	KP_PGDN
	KP_ENTER
	KP_INS
	KP_DEL

5.4. Обработка клавиш в консоли
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
В zquake значительно улучшена обработка клавиш консоли, теперь работают
клавиши <--, -->, home, end, и если вы сделали опечатку в начали строки,
можно подогнать к нужному месту курсор и отредактировать, а не стирать
весь конец строки клавишей backspace, как приходилось делать в NQ и QW 2.30.
Вследствие того, что home и end теперь перемещают курсор по строке, для
прокрутки консоли в самый верх и вниз следует использовать ctrl+home и
ctrl+end.

5.5. Демки
~~~~~~~~~~
При просмотре демок работает команда pause, а также переменная demotimescale:
* demotimescale 0.25 - замедленный (в четыре раза) просмотр
* demotimescale 5 - ускоренный (в пять раз) просмотр.
* demotimescale 1 - нормальная скорость.

* easyrecord [demoname] - если дать такую команду, то начнется запись демки,
	причем не нужно заморачиваться с выбором имени. Если не указан
	параметр demoname, то имя генерится автоматически следующим образом:

	duel: player1_vs_player2_map
	teamplay: player1_team1_vs_team2_map
	ffa: player1_ffa_map
	one player: player1_map

	Если демка с таким именем уже существует, в конец демки будут добавлены
	две цифры, начиная с 00 и так далее, то есть если уже существует
	unnamed_dm6.qwd, будет создана unnamed_dm6_00.qwd, затем
	unnamed_dm6_01.qwd и так далее.

	Кроме того, в команде easyrecord можно указать параметр, и в этом
	случае она будет работать как команда record, но зато с вышеописанной
	возможностью автонумерации демок.
	Примеры:
		easyrecord tempdemo
		easyrecord $name_$team

5.6. Параметр -port <portnum>
Присутствует только в zquake.exe и zqwsv.exe.
Меняет порт сервера (по умолчанию - 27500).

5.7. "f_version", "z_version"
zquake теперь отзывается, как и прокси, на слово f_version и z_version.
	Говорит свою версию и номер билда.

-----------------------
Автор проекта:
Антон Гаврилов aka Tonik (tonik@quake.ru)

Идейный вдохновитель:
Turba (turba@hrg.dhtp.kiae.ru)

Страничка: http://zquake.da.ru/ (или http://zquake.frag.ru)
